/********************************************************************
1. 题目来源：https://leetcode-cn.com/problems/make-the-xor-of-all-segments-equal-to-zero/

2. 原题
给你一个整数数组 nums​​​ 和一个整数 k​​​​​ 。区间 [left, right]（left <= right）的 异或结果 
是对下标位于 left 和 right（包括 left 和 right ）之间所有元素进行 XOR 运算的结果：
nums[left] XOR nums[left+1] XOR ... XOR nums[right] 。
返回数组中 要更改的最小元素数 ，以使所有长度为 k 的区间异或结果等于零。

示例 1：

输入：nums = [1,2,0,3,0], k = 1
输出：3
解释：将数组 [1,2,0,3,0] 修改为 [0,0,0,0,0]
示例 2：

输入：nums = [3,4,5,2,1,7,3,4,7], k = 3
输出：3
解释：将数组 [3,4,5,2,1,7,3,4,7] 修改为 [3,4,7,3,4,7,3,4,7]
示例 3：

输入：nums = [1,2,4,1,2,5,1,2,6], k = 3
输出：3
解释：将数组[1,2,4,1,2,5,1,2,6] 修改为 [1,2,3,1,2,3,1,2,3]
。
3. 归类：异或问题 ，动态规划

4. 解题要点：很明显，修改结束后的数组是一个周期数组，其中nums[i]=ums[i+k];
若第i个数不变，则nums[i+k]必须=nums[i],不等则需要修改
所以整个数组有两种性质：
异或性和周期性
**********************************************************************/

/*************************头文件*****************************/
#include <iostream>
#include <vector>
#include <set>
#include <algorithm>
#include <stack>
#include <map>
using namespace std;

/*************************实现函数*****************************/
class Solution {
public:
	int minChanges(vector<int>& nums, int k) {

	}
};

/*************************main函数 输入输出*****************************/
int main() {

	system("pause");
	return 0;
}